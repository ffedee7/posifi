service: posifi

custom:
  serviceId: ${self:service}-${opt:stage, 'dev'}
  aiBucketName: ${self:custom.serviceId}.ai

# General settings
provider:
  name: aws
  runtime: python3.7
  region: sa-east-1
  # Environment variables shared across all the resources
  environment:
      # Export the service id name
      serviceId: ${self:service}
      # Export the bucket name to the environment
      aiBucketName: ${self:custom.aiBucketName}
      # Export the current stage, default to dev
      stage: ${opt:stage, 'dev'}
      # Export the AWS region
      region: ${self:provider.region}
      PYTHONPATH: '/var/task/:/var/runtime:/opt'

  # Give read access to the SSM to all the resources
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
  # Give access to the Partners DB to all resources
  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - rds:*
  #     Resource: "arn:aws:rds:us-west-2:186309585885:db:partners-${opt:stage, 'dev'}"

resources:
  Resources:

    AIBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.aiBucketName}
        AccessControl: Private

layers:
  Requirements:
    path: .requirements 
    name: ${self:custom.serviceId}-requirements-layer
    description: This Layer contains the python requirements for all lambdas.
    compatibleRuntimes:
      - python3.7

package:
  individually: true
  excludeDevDependencies: false

functions:

  train-models:
    handler: lambda_handlers/train_models.run
    layers:
        - {Ref: RequirementsLambdaLayer}
    timeout: 300
    package:
      include:
        - lambda_handlers/train_models.py
        - commons/**
      exclude:
        - '**'
    # environment:
    #   anyLambdaName: ${self:custom.serviceId}-lambda-name
    events:
      - http:
          path: train
          method: get

  classify:
    handler: lambda_handlers/classify.run
    layers:
        - {Ref: RequirementsLambdaLayer}
    timeout: 300
    package:
      include:
        - lambda_handlers/classify.py
        - commons/**
      exclude:
        - '**'
    # environment:
    #   anyLambdaName: ${self:custom.serviceId}-lambda-name
    events:
      - http:
          path: classify
          method: post
